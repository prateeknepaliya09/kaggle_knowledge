#kaggle face recognition:
#
#
# #input the data 
# d.train <- read.csv("~/Dropbox/Kaggle/FaceProject/training.csv",stringsAsFactors=F);
# 
# #check the data formation
# str(d.train);
# 
# #chech the head
# head(d.train);
# 
# 
# #Unfortunately the rightmost column is quite long, so the output is not very readable. 
# #Let's save that column as another variable, and remove it from d.train:
# im.train <- d.train$Image
# d.train$Image <- NULL
# 
# # To analyze these further, we convert these strings to integers by splitting them and 
# # converting the result to integer:
#   
# library(doParallel)
# registerDoParallel()
# 
# im.train <- foreach(im = im.train, .combine=rbind) %dopar% {as.integer(unlist(strsplit(im, " ")))}
# 
# str(im.train)
# 
# #test data  
# d.test <- read.csv("~/Desktop/Kaggle/Face detection/test.csv",stringsAsFactors=F);
# im.test <- foreach(im = d.test$Image, .combine=rbind) %dopar% {#   as.integer(unlist(strsplit(im, " "))) }
# d.test$Image <- NULL
#
# 
#im <- matrix(data=rev(im.train[6,]), nrow=96, ncol=96)
#image(1:96, 1:96, im, col=gray((0:255)/255))
#points(96-d.train$nose_tip_x[6],         96-d.train$nose_tip_y[1],         col="red")
#points(96-d.train$left_eye_center_x[6],  96-d.train$left_eye_center_y[1],  col="blue")
#points(96-d.train$right_eye_center_x[6], 96-d.train$right_eye_center_y[1], col="green")

#for(i in 1:nrow(d.train)) {
  points(96-d.train$nose_tip_x[i], 96-d.train$nose_tip_y[i], col="red")
   }
#idx <- which.max(d.train$nose_tip_x)
#im  <- matrix(data=rev(im.train[idx,]), nrow=96, ncol=96)
#image(1:96, 1:96, im, col=gray((0:255)/255))
#points(96-d.train$nose_tip_x[idx], 96-d.train$nose_tip_y[idx], col="red")

#colMeans(d.train, na.rm=T)
#p<- matrix(data=colMeans(d.train, na.rm=T), nrow=nrow(d.test), ncol=ncol(d.train), byrow=T)
#colnames(p) <- names(d.train)
#predictions <- data.frame(ImageId = 1:nrow(d.test), p)
#head(predictions)
#library(reshape2)
#submission <- melt(predictions, id.vars="ImageId", variable.name="FeatureName", value.name="Location")
#head(submission)
#seperate the data set into two subsets
#library(plyr)
#data.dir <- getwd();
#example.submission <- read.csv(paste0(data.dir, '/', 'IdLookupTable.csv'));
#sub.col.names <- c("RowId","Location")
#cdata <- ddply(example.submission, .(ImageId), summarise, N = length(ImageId))
#table(cdata$N)
